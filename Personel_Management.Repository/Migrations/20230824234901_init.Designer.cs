// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Personel_Management.Repository;

#nullable disable

namespace Personel_Management.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230824234901_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Personel_Management.Core.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 25, 2, 49, 1, 9, DateTimeKind.Local).AddTicks(5495),
                            Name = "IT",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 8, 25, 2, 49, 1, 9, DateTimeKind.Local).AddTicks(5508),
                            Name = "HR",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 8, 25, 2, 49, 1, 9, DateTimeKind.Local).AddTicks(5509),
                            Name = "Management",
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("Personel_Management.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(18)
                        .HasAnnotation("ValidAgeRange", "18-99");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeHoursId")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeHoursId")
                        .IsUnique()
                        .HasFilter("[EmployeeHoursId] IS NOT NULL");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 20,
                            CreatedDate = new DateTime(2023, 8, 25, 2, 49, 1, 9, DateTimeKind.Local).AddTicks(5795),
                            DepartmentId = 1,
                            EmployeeHoursId = 1,
                            Lastname = "Cabbar",
                            Name = "Ali",
                            Password = "password",
                            UserName = "cabbar45",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            Age = 23,
                            CreatedDate = new DateTime(2023, 8, 25, 2, 49, 1, 9, DateTimeKind.Local).AddTicks(5799),
                            DepartmentId = 2,
                            EmployeeHoursId = 2,
                            Lastname = "Yıldırım",
                            Name = "Mahmut",
                            Password = "password",
                            UserName = "mahmut45",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            Age = 22,
                            CreatedDate = new DateTime(2023, 8, 25, 2, 49, 1, 9, DateTimeKind.Local).AddTicks(5800),
                            DepartmentId = 2,
                            EmployeeHoursId = 3,
                            Lastname = "Alkan",
                            Name = "Zeynep",
                            Password = "password",
                            UserName = "alkan35",
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("Personel_Management.Core.Entities.EmployeeHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("End")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EmployeeHours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 25, 2, 49, 1, 9, DateTimeKind.Local).AddTicks(5669),
                            EmployeeId = 1,
                            End = "14:00",
                            Start = "08:00",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 8, 25, 2, 49, 1, 9, DateTimeKind.Local).AddTicks(5671),
                            EmployeeId = 2,
                            End = "17:00",
                            Start = "08:00",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 8, 25, 2, 49, 1, 9, DateTimeKind.Local).AddTicks(5672),
                            EmployeeId = 3,
                            End = "18:00",
                            Start = "09:00",
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("Personel_Management.Core.Entities.Employee", b =>
                {
                    b.HasOne("Personel_Management.Core.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Personel_Management.Core.Entities.EmployeeHour", "EmployeeHours")
                        .WithOne("Employee")
                        .HasForeignKey("Personel_Management.Core.Entities.Employee", "EmployeeHoursId");

                    b.Navigation("Department");

                    b.Navigation("EmployeeHours");
                });

            modelBuilder.Entity("Personel_Management.Core.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Personel_Management.Core.Entities.EmployeeHour", b =>
                {
                    b.Navigation("Employee")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
